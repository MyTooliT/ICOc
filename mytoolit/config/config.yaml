# Currently only the production tests of the STH and STU use the following
# config file.

# =================
# = Shared Values =
# =================

# We use anchors and references to use the same value in the document multiple
# times. This has the advantage that we only have to update the value in
# one place.

# We assume that you use the same programming board for the STH (SHA) and STU.
PROGRAMMING BOARD NUMBER: &serial 440120910
# We assume that you use the same CAN bitrate on Linux and Windows
CAN BITRATE: &bitrate 1000000

# =============================================
# = Parameter to be changed at the production =
# =============================================

#----------------------------------------------
# User Name
USER: &username Dummy user

# Used Sensor (ADXL1001 = 100g ; ADXL1002 = 50g)
SENSOR: &sensor ADXL1001
#SENSOR: &sensor ADXL1002

# Holder Type
HOLDER TYPE: &holder_type D 10x130 HSK-A63

# Holder name
HOLDER NAME: &holder_name BBBB1111

# Holder serial number (Format: 4xLetters followed by 4 Numbers)
HOLDER SERIAL NUMBER: &serial_number BBBB1111

# PCB state (Bare PCB ; Epoxied)
STATE: &state Epoxied
#STATE: &state Bare PCB
#-----------------------------------------------

# =================
# = Configuration =
# =================

# The values below specify the configuration options for the
# [python-can](https://python-can.readthedocs.io) Bus class. Please note that
# these configuration values are currently not used by the main command line
# tool or any of the tests!
CAN:
  LINUX:
    BITRATE: *bitrate
    CHANNEL: can0
    INTERFACE: socketcan
  WINDOWS:
    BITRATE: *bitrate
    CHANNEL: PCAN_USBBUS1
    INTERFACE: pcan

COMMANDS:
  PATH:
    # The keys below this key should contain the path to Simplicity Commander
    # (`commander`) for different operating systems. If the list for the current
    # OS does not do that, then the STH test will fail, unless the commands are
    # already accessible via the path environment variable (`$Env:Path` in
    # Windows or `$PATH` in Unix).
    WINDOWS:
      # The paths below are the default install locations of `commander` in
      # Windows
      - C:\SiliconLabs\SimplicityStudio\v4\developer\adapter_packs\commander
      - C:\SiliconLabs\SimplicityStudio\v5\developer\adapter_packs\commander

LOGGER:
  ICOC:
    # This value specifies the filename for the logging files written by ICOc.
    # Please note, that ICOc will always add a timestamp after the name and
    # before the suffix. In case there were any problems the program will also
    # add the postfix `_error` to the end of the filename.
    #
    # Examples (for the value `ICOc.txt`):
    #
    # - `ICOc_2021-08-25_10-23-04.txt` (no error)
    # - `ICOc_2021-08-25_10-23-04_error.txt` (error)
    #
    FILENAME: ICOc.txt
  CAN:
    # The value below specifies the minimum level of messages logged to
    # `can.log`. Currently the logger only writes debug messages, which means
    # ICOc will write CAN messages to `can.log`, if you specify the value
    # `DEBUG`. If you use a different allowed value, such as `INFO` or `WARNING`
    # no messages will be logged.
    LEVEL:
      INFO

GUI:
  HOST: localhost # Socket address of Matplotlib GUI
  PORT: 50007 # Port of Matplotlib GUI

OPERATOR:
  # The name of the operator that executes the hardware tests
  NAME: *username

STH:
  ACCELERATION SENSOR:
    # Values for the Analog Devices ± 100g analog accelerometer sensor ADXL1001.
    ADXL1001:
      ACCELERATION:
        # Maximum Acceleration of sensor in multiples of g₀ (= 9.807 m/s²)
        MAXIMUM: 200
        # This value stores the maximum allowed ratio of noise to maximum
        # measurement value in dB. If the measured ratio is above this level,
        # then the tested STH will be considered faulty.
        RATIO NOISE TO MAX VALUE: -55
        # Tolerance to expected (stationary) acceleration value (of 0 m/s²) in
        # multiples of g₀
        TOLERANCE: 5
      SELF TEST:
        VOLTAGE:
          # Expected voltage difference between
          #
          # - the measured (stationary) acceleration voltage, and
          # - acceleration voltage when the self test is active
          #
          # in mV. For more information, please check the data sheet of the
          # accelerometer.
          DIFFERENCE: 90
          # Tolerance to the expected voltage difference in mV
          TOLERANCE: 20
    # Values for the Analog devices ± 50g digital accelerometer sensor ADXL1002.
    # Please check the comments for sensor `ADXL1001` for a more detailed
    # description of the config values.
    ADXL1002:
      ACCELERATION:
        MAXIMUM: 100
        RATIO NOISE TO MAX VALUE: -55
        TOLERANCE: 4
      SELF TEST:
        VOLTAGE:
          DIFFERENCE: 160
          TOLERANCE: 30
    # The identifier of the accelerometer sensor (either `ADXL1001` or
    # `ADXL1002`). The values below the key will be used for the STH test.
    #
    # For example, if you specify the value `ADXL1001`, then the value
    #
    #  `STH` → `Acceleration Sensor` → `ADXL1001` → `Acceleration` → `Maximum`
    #
    # will be used as maximum acceleration value for the current STH.
    SENSOR: *sensor

  # An ever increasing (32 bit unsigned) number that describes the current
  # batch that this STH was a part of.
  BATCH NUMBER: 200

  BATTERY VOLTAGE:
    AVERAGE: 3.6 # Expected value of power source voltage in Volt
    TOLERANCE: 0.6 # Tolerance for expected power source voltage in Volt
  BLUETOOTH:
    # Advertisement time 1 in ms
    ADVERTISEMENT TIME 1: 2000
    # Advertisement time 2 in ms
    ADVERTISEMENT TIME 2: 4000
    # Time to from disconnect or power on to sleep mode 1 in ms
    SLEEP TIME 1: 300000
    # Time to/from entering sleep mode 1 to sleep mode 2 in ms
    SLEEP TIME 2: 259200000

  FIRMWARE:
    LOCATION:
      # This value should contain the path to a complete image (bootloader and
      # application). This path will be interpreted in relation to the root of
      # the repository.
      FLASH: ../STH/builds/manufacturingImageSthv2.1.10.hex
    # Code name of the current firmware release
    RELEASE NAME: Tanja

  # Global Trade Item Number
  GTIN: 0

  # The current version of the PCB design
  HARDWARE VERSION: 1.4.0

  # The type of holder that contains the SHA
  HOLDER TYPE: *holder_type

  # This value specifies the current name of the STH unit
  NAME: *holder_name

  # OEM specific data
  OEM DATA: [
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     ]

  # The production date of the STH PCB in the format YYYY-MM-DD
  PRODUCTION DATE: 2019-07-03

  # Product name for the  manufacturer (maximum of 64 byte UTF-8 encoded text)
  PRODUCT NAME: 0

  PROGRAMMING BOARD:
    # Please store the serial number of the programming board that is connected
    # to the STH here. This number should be displayed in the right bottom
    # corner of the LC display, after you connect the programmer to a power
    # source
    SERIAL NUMBER: *serial

  # Serial number for the manufacturer (maximum of 8 alphanumerical characters);
  # The STH test will rename the STH (from `STH` → `NAME`) to this value, if
  # you set the status (`STH` → `STATUS`) to `Epoxied`. Otherwise the test
  # will use the (Base64 encoded) MAC address as new name.
  SERIAL NUMBER: *serial_number

  STATUS:
    # Describe the status of the current STH hardware. This scalar should either
    # store the value `Bare PCB` or `Epoxied`. If you use the value `Epoxied`,
    # then the flash test for the STH will be skipped.
    *state

STU:

  # An ever increasing (32 bit unsigned) number that describes the current
  # batch that this STU was a part of.
  BATCH NUMBER: 100

  FIRMWARE:
    LOCATION:
      # This value should contain the path to a complete image (bootloader and
      # application). This path will be interpreted in relation to the root of
      # the repository.
      FLASH: ../STU/builds/manufacturingImageStuv2.1.10.hex
    RELEASE NAME: Valerie

  # Global Trade Item Number
  GTIN: 0

  # The current version of the PCB design
  HARDWARE VERSION: 1.3.3

  # OEM specific data
  OEM DATA: [
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
     ]

  # The production date of the STH PCB in the format YYYY-MM-DD
  PRODUCTION DATE: 2020-08-20

  # Product name for the  manufacturer (maximum of 128 byte UTF-8 encoded text)
  PRODUCT NAME: 0

  PROGRAMMING BOARD:
    # Please store the serial number of the programming board that is connected
    # to the STU here. This number should be displayed in the right bottom
    # corner of the LC display, after you connect the programmer to a power
    # source
    SERIAL NUMBER: *serial

  # Serial number for the manufacturer (maximum of 32 byte UTF-8 encoded text)
  SERIAL NUMBER: 0

